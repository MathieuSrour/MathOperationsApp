/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11/userguide/building_java_projects.html in the Gradle documentation.
 */

description = "A simple mathematical operations application."

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named<CreateStartScripts>("startScripts") {
    dependsOn(tasks.named("shadowJar"))
}



tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


plugins {
    java
    application
    id("checkstyle") // Apply the Checkstyle plugin
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("com.github.spotbugs") version "5.1.3"
    //id("org.sonarqube") version '4.4.1.3373'
    //id("org.owasp.dependencycheck") version '8.4.0'
}


checkstyle {
    toolVersion = "10.12.0" // Specify the Checkstyle version
    configFile = file("config/checkstyle/checkstyle.xml") // Path to Checkstyle configuration file
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.apache.commons:commons-math3:3.6.1")
    testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
    implementation("org.apache.logging.log4j:log4j-core:2.20.0")
    implementation("org.apache.logging.log4j:log4j-api:2.20.0")
    //implementation("org.apache.logging.log4j:log4j-jpl:2.20.0")
}

application {
    mainClass.set("org.example.App")
}

tasks.jar {
    manifest {
        attributes(
            "Main-Class" to "org.example.App"
        )
    }
}



tasks.javadoc {
    source = sourceSets["main"].allJava
    options.encoding = "UTF-8"
}


version = "1.0.0"


spotbugs {
    toolVersion.set("4.7.3") // Set SpotBugs tool version
    effort.set(com.github.spotbugs.snom.Effort.MAX)
    reportLevel.set(com.github.spotbugs.snom.Confidence.LOW)
}

tasks.named<com.github.spotbugs.snom.SpotBugsTask>("spotbugsMain") {
    reports.create("html") {
        required.set(true)
        outputLocation.set(file("build/reports/spotbugs/spotbugsMain.html"))
    }
}

tasks.named<com.github.spotbugs.snom.SpotBugsTask>("spotbugsTest") {
    reports.create("html") {
        required.set(true)
        outputLocation.set(file("build/reports/spotbugs/spotbugsTest.html"))
    }
}

